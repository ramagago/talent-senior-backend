// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Person {
  id               Int      @id @default(autoincrement())
  dni              String
  dniNumber        String
  birthday         DateTime
  name             String
  surname          String
  about            String
  address          String
  cp               String?
  email            String
  gender           String?
  phone            String
  countyPD         String?
  cityPD           String?
  
  // Relations
  languages        Language[]
  references       Reference[]
  studies          Study[]
  workExperiences WorkExperience[]
}

model Language {
  id           Int      @id @default(autoincrement())
  languageName String
  spokenLevel  Int
  readLevel    Int
  writtenLevel Int

  // Relation to Person
  person       Person   @relation(fields: [personId], references: [id])
  personId     Int
}

model Reference {
  id               Int      @id @default(autoincrement())
  referenceRole    String
  referenceName    String
  referenceSurname String
  referencePhone   String
  referenceCompany String
  referenceType    String

  // Relation to Person
  person         Person   @relation(fields: [personId], references: [id])
  personId       Int
}

model Study {
  id                 Int      @id @default(autoincrement())
  level              String
  title              String
  institute          String
  fieldOfStudy       String
  currentlyStudying  Boolean?
  startStudyDate     DateTime
  endStudyDate       DateTime?
  countyStudy        String?
  cityStudy          String?

  // Relation to Person
  person         Person   @relation(fields: [personId], references: [id])
  personId       Int
}

model WorkExperience {
  id               Int      @id @default(autoincrement())
  role             String
  company          String
  workField        String
  positionLevel    String?
  peopleInCharge   String?
  task             String?
  salary           String?
  startWorkDate    DateTime
  currentlyWorking Boolean?
  endWorkDate      DateTime?
  skills           String[]

  // Relation to Person
  person       Person   @relation(fields: [personId], references: [id])
  personId     Int
}

model Companies {
  id               Int      @id @default(autoincrement())
  companyName      String
  name             String
  surname          String
  companyEmail     String
  companyPhone     String
  companyWebsite   String?
  howCanWeHelp     String?

  // Otros campos seg√∫n sea necesario
}